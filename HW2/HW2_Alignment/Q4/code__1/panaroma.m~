% It will create Panaroma for given set of images
% All images size must be same
function [ outImg ] = panaroma(imageSet,pad)
    %% Init
    noOfImage=numel(imageSet);
    dim=size(imageSet{1});  
    colorImg=numel(dim)==3;
    %% Converting Images to Gray Scale
    if colorImg
        for i=1:noOfImage
            workingImgSet{i}=rgb2gray(imageSet{i}); 
        end
    else
        workingImgSet=imageSet;
    end


    %% Padding zeros for avoiding cropping of images
    for i=1:noOfImage
        workingImgSet{i}=padarray(workingImgSet{i},[pad,pad]); 
        imageSet{i}=padarray(imageSet{i},[pad,pad]); 
    end
    
    %% Feature Extraction(extract matching keypoints for two adjecent images);

    [matchA,vpts1,vpts2]=match(img1,img2);
    indexPairs=find(matchA);
    matchedPoints1_1 = vpts1(indexPairs,:);
    matchedPoints1_2 = vpts2(matchA(indexPairs),:);
    for i=noOfImage-1
        [mapping,vpts1,vpts2]=match(img1,img2);
        indexPairs=find(mapping);
        matchedPoints{i,1} = vpts1(indexPairs,:);
        matchedPoints{i,2} = vpts2(mapping(indexPairs),:);        
    end

    
    %% Finding Homomorphic projection for seach
    tic
    thresh=2;
    [H,inliners] = ransacHomography(matchedPoints1_1, matchedPoints1_2, thresh);
    toc
    %%
    thresh=2;
    [H2,inliners2,cp3,cp2_2] = ransacHomography(matchedPoints2_3,matchedPoints2_2,thresh);
    toc;
    %% validation
    val=H*cp1';
    val=bsxfun(@times,val',1./val(3,:)');

    %% mark point

    pt=cp1;
    noOfPoints=size(pt,1);        
    for i=1:noOfPoints
        img1 = insertMarker(img1,[pt(i,2),pt(i,1)],'x','color','red','size',15);
        img1= insertText(img1,[pt(i,2)+5,pt(i,1)-5],strcat(num2str(i)), 'FontSize',18,'BoxColor', 'yellow');

    end

    figure('name','image 1');
    imshow(uint8(img1));
    impixelinfo;
    title('\fontsize{10}{\color{magenta} image 1}');
    axis tight,axis on;
    o1 = get(gca, 'Position');
    colorbar(),set(gca, 'Position', o1);


    pt=cp2;
    noOfPoints=size(pt,1);        
    for i=1:noOfPoints
        img2 = insertMarker(img2,[pt(i,2),pt(i,1)],'x','color','red','size',15);
        img2= insertText(img2,[pt(i,2)+5,pt(i,1)-5],strcat(num2str(i)), 'FontSize',18,'BoxColor', 'yellow');
    end

    figure('name','image 2');
    imshow(uint8(img2));
    impixelinfo;
    title('\fontsize{10}{\color{magenta} image 2}');
    axis tight,axis on;
    o1 = get(gca, 'Position');
    colorbar(),set(gca, 'Position', o1);


    %% 2. Trasformation of Image 1

    [timg1] = trasformImage(cimg1,H);
    [timg2] = cimg2;
    [timg3] = trasformImage(cimg3,H2);


    %% Stiching of Multiple Images
    stichedImage=stichMultipleImage({timg1,timg2,timg3});

end

